import os
import asyncio
import random
import nest_asyncio
from datetime import datetime, time, timedelta

from telegram import BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler
from dotenv import load_dotenv
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.date import DateTrigger

# –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers import start, handle_sentmsg, handle_sentmsg_ai
from db import init_db

# –ü–æ–¥–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

nest_asyncio.apply()

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN is not set in .env")


def schedule_random_ai_messages(scheduler, app):
    """
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç 4 —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–ø—É—Å–∫–∞ handle_sentmsg_ai –º–µ–∂–¥—É 10:00 –∏ 21:00.
    """
    now = datetime.now()
    today = now.date()
    times = []

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 4 —Å–ª—É—á–∞–π–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É 10:00 –∏ 21:00
    for _ in range(4):
        hour = random.randint(10, 20)  # –¥–æ 20 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ, —Ç.–∫. 21:00 ‚Äî –≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
        minute = random.randint(0, 59)
        t = datetime.combine(today, time(hour, minute))
        if t > now:
            times.append(t)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç–∏
    times.sort()

    for t in times:
        print(f"üïí Scheduled AI message at {t.strftime('%H:%M')}")
        scheduler.add_job(
            handle_sentmsg_ai,
            trigger=DateTrigger(run_date=t),
            args=(app.bot, None),  # –ø–µ—Ä–µ–¥–∞—ë–º bot; update=None, –µ—Å–ª–∏ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é
        )


async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –ö–æ–º–∞–Ω–¥—ã
    await app.bot.set_my_commands([
        BotCommand("start", "Start the bot"),
        BotCommand("sentmsg", "Send text to all subscribers (admin only)"),
        BotCommand("sentmsg_ai", "Send AI-generated message to all (admin only)")
    ])

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
    scheduler.start()

    # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤
    scheduler.add_job(
        schedule_random_ai_messages,
        trigger="cron",
        hour=0,
        minute=5,
        args=[scheduler, app],
    )

    # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    schedule_random_ai_messages(scheduler, app)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("sentmsg", handle_sentmsg))
    app.add_handler(CommandHandler("sentmsg_ai", handle_sentmsg_ai))

    print("Bot is running...")
    await app.run_polling()


if __name__ == "__main__":
    asyncio.run(main())
